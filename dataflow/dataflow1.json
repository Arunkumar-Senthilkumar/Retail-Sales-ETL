{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_raw_sales",
						"type": "DatasetReference"
					},
					"name": "sales"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sales_silver",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "filter1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SaleID as integer,",
				"          CustomerID as integer,",
				"          ProductID as integer,",
				"          SaleDate as date,",
				"          Quantity as integer,",
				"          TotalAmount as decimal(10,2)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sales",
				"sales filter(!isNull(SaleID) && !isNull(CustomerID)) ~> filter1",
				"filter1 derive(ProductID = iif(isNull(ProductID), 0, ProductID),",
				"          SaleDate = iif(isNull(SaleDate), toDate('2025-03-14', 'yyyy-MM-dd'), SaleDate)\r",
				",",
				"          Quantity = iif(isNull(Quantity),0,Quantity),",
				"          TotalAmount = iif(isNull(TotalAmount),toDecimal(0,10,2),TotalAmount)) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0222,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          SaleID,",
				"          CustomerID,",
				"          ProductID,",
				"          SaleDate,",
				"          Quantity,",
				"          TotalAmount",
				"     )) ~> sink1"
			]
		}
	}
}